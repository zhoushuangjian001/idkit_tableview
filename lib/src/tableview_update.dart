import 'dart:async';
import 'package:idkit_tableview/src/tableview_indexpath.dart';

/// TableView update control object class.
class IDKitUpdateControl {
  /// Factory method to initialize the object.
  factory IDKitUpdateControl() => IDKitUpdateControl._();

  /// Basic initial construction method.
  IDKitUpdateControl._() {
    _updateStreamController = StreamController<IDKitUpdateType>();
  }

  /// Event forwarding subscribers are generated by default.
  StreamController<IDKitUpdateType>? _updateStreamController;
  StreamController<IDKitUpdateType>? get updateStreamController {
    _updateStreamController =
        _updateStreamController ?? IDKitUpdateControl().updateStreamController;
    return _updateStreamController;
  }

  /// Update the head view of the tableview.
  void updateHeaderTableView() {
    const String key = 'com.idkit.header';
    _updateStreamController?.add(const IDKitUpdateType(key: key));
  }

  /// Update the bottom view of the tableview.
  void updateFotterTableView() {
    const String key = 'com.idkit.fotter';
    _updateStreamController?.add(const IDKitUpdateType(key: key));
  }

  /// Update the head view of section.
  void updateHeaderSection(int section) {
    final String key = 'com.idkit.section.header-$section';
    _updateStreamController?.add(IDKitUpdateType(key: key));
  }

  /// Update the bottom view of section.
  void updateFotterSection(int section) {
    final String key = 'com.idkit.section.fotter-$section';
    _updateStreamController?.add(IDKitUpdateType(key: key));
  }

  /// Update the view of a row in section.
  void updateRowInSection(IDKitIndexPath indexPath) {
    final String key =
        'com.idkit.section.row-${indexPath.section}-${indexPath.row}';
    _updateStreamController?.add(IDKitUpdateType(key: key));
  }

  /// Update the separate view of section.
  void updateSeparateInSection(int section) {
    final String key = 'com.idkit.separate.section-$section';
    _updateStreamController?.add(IDKitUpdateType(key: key));
  }

  /// Update all views in a section.
  void updateRowsInSection(int section) {
    final String key = 'com.idkit.section.row-$section';
    _updateStreamController?.add(IDKitUpdateType(key: key, single: false));
  }
}

/// The form of the tableview update.
class IDKitUpdateType {
  const IDKitUpdateType({
    required this.key,
    this.single = true,
  });

  /// Updated key.
  final String key;

  /// Update form.
  final bool single;
}
